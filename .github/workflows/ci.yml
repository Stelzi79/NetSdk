on:
  push:
    tags: 
      - '*'
    branches:
      - develop
jobs:
  enfironments:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100-rc.2.21505.57
      - name: Test
        run: |
          dotnet test --configuration Release --no-build
        working-directory: ./src
      - name: Pack
        run: |
          dotnet restore
          dotnet msbuild -t:Replace -t:MinVer
          dotnet pack --configuration Release
        working-directory: ./src
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            .vs/bin/Stelzi79.NetSdk.ProjectTemplate/Release/Stelzi79.NetSdk.ProjectTemplate*.nupkg
            .vs/bin/Stelzi79.NetSdk/Release/Stelzi79.NetSdk*.nupkg
          prerelease: false
      - name: PreRelease
        uses: softprops/action-gh-release@v1
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        with:
          tag_name: ${{ github.ref_type }}-${{ github.ref_name }}-${{ steps.short-sha.outputs.sha }}-${{ github.run_id }}
          body: |
            ${{ github.event.commits[0].message }}
            ${{ toJSON(github.event.commits) }}            
          files: |
            .vs/bin/Stelzi79.NetSdk.ProjectTemplate/Release/Stelzi79.NetSdk.ProjectTemplate*.nupkg
            .vs/bin/Stelzi79.NetSdk/Release/Stelzi79.NetSdk*.nupkg
            .vs/bin/Stelzi79.NetSdk/Release/Stelzi79.NetSdk.BlazorWebAssembly*.nupkg
            .vs/bin/Stelzi79.NetSdk/Release/Stelzi79.NetSdk.Razor*.nupkg
            .vs/bin/Stelzi79.NetSdk/Release/Stelzi79.NetSdk.Web*.nupkg
            .vs/bin/Stelzi79.NetSdk/Release/Stelzi79.NetSdk.Worker*.nupkg
          prerelease: true
      - name: Publish the package to GPR
        run: dotnet nuget push .vs/bin/**/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://nuget.pkg.github.com/Stelzi79/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Publish the package to nuget.org
        run: dotnet nuget push .vs/bin/**/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        if: startsWith(github.ref, 'refs/tags/')
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_KEY }}
