<Project ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Target Name="MsBuildInfo" AfterTargets="restore">
		<Message Importance="high" Text="Local Packages are resolved from the source: $(LocalPackageSource)"/>
	</Target>

	<!-- Condition of Checking of Version 1.0.0 is needed because this pack command gets triggered twice! -->
	<Target Name="CustomSdkPackTask" Condition=" '$(Configuration)' == 'Debug'" AfterTargets="Pack">
		<ItemGroup>
			<TestPath Include="$(LocalCachePlace)\$(Version)"/>
		</ItemGroup>
		<Message Importance="high" Text="Packing $(PackageId): $(Version)"/>
		<!-- <CallTarget Condition=" '$(Version)' != '1.0.0' " Targets="Pack"/> -->
		<Message Importance="high" Text="Found in $(LocalPackageSource): @(TestPath)"/>
		<Exec Command="..\nuget.exe delete $(PackageId) $(Version) -src LocalPackageSource -NonInteractive" IgnoreExitCode="true"/>
		<Exec Command="..\nuget.exe add $(OutputPath)..\$(PackageId).$(PackageVersion).nupkg -src $(LocalPackageSource) -NonInteractive" IgnoreExitCode="true"/>
		<RemoveDir Directories="@(TestPath)"/>
	</Target>

	<!-- <Target Name="repl" AfterTargets="MinVer" Condition="@(ReplacerFiles->Count()) != 0">
		<ItemGroup>
			<ReplacedFiles Include="@(ReplacerFiles->Replace('_pre',''))">
				<Orig>%(ReplacerFiles.Identity)</Orig>
			</ReplacedFiles>
		</ItemGroup>
	</Target> -->

	<Target Name="Replace" AfterTargets="MinVer" Condition="@(ReplacerFiles->Count()) != 0">
		<ItemGroup>
			<ReplacedFiles Include="@(ReplacerFiles->Replace('_pre',''))">
				<Orig>%(ReplacerFiles.Identity)</Orig>
				<Ver>$(Version)</Ver>
			</ReplacedFiles>
		</ItemGroup>
		<Message Importance="high" Text="Files: %(ReplacedFiles.Orig) => %(ReplacedFiles.Identity)" />
		<WriteLinesToFile
        File="%(ReplacedFiles.Identity)"
				Lines="$([System.IO.File]::ReadAllText(%(ReplacedFiles.Orig)).Replace('0.0.1-replace.me','%(ReplacedFiles.Ver)'))"          
        Overwrite="true"
        Encoding="Unicode"/>
  </Target> 

	
	<Target Name="Replace2">
	  <PropertyGroup>
      <In>%(ReplacerFiles.Identity)</In>

      <!-- <Out>$(In.Replace('_pre',''))</Out> -->
    </PropertyGroup>	
			<!-- <Message Importance="high" Text="Text $(Lines)" /> -->
  	<!-- <WriteLinesToFile
        File="$(Out)"
				Lines="$([System.IO.File]::ReadAllText(%(ReplacerFiles.Identity)).Replace('0.0.1-replace.me','$(Version)'))"          
        Overwrite="true"
        Encoding="Unicode"/> -->
	</Target>
</Project>